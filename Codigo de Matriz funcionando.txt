/* #include <stdio.h>
int main() {
    int m1 [1000][1000];
    int r1;
    printf("Ingresar el numero de renglones de la matriz 1:");
    scanf("%d" ,&r1);
    int c1;
    printf("Ingresar el numero de columnas de la matriz 1:");
    scanf("%d" ,&c1);
    int cr;
    int cc;
    cr=0;
    cc=0;
    while (cr<r1){
        while (cc<c1){
            printf("Digite un numero para matriz[r1][c1]:");
            scanf("%d",&m1[cr][cc]);
            printf("m1[%d][%d]\n",cr,cc);
            cc=cc+1;
        }
        cr=cr+1;
    }
    return 0;
}

El programa no se ejecutaba porque abarcaba mucha memoria al 
delimitar una matriz como maximo de 1000 x 1000*/



/*#include <stdio.h>
int main() {
	int m1 [100][100];
    int r1;
    printf("Ingresar el numero de renglones de la matriz 1:");
    scanf("%d" ,&r1);
    int c1;
    printf("Ingresar el numero de columnas de la matriz 1:");
    scanf("%d" ,&c1);
    int cr;
    int cc;
    cr=0;
    cc=0;
    while (cr<r1){
        while (cc<c1){
            printf("Digite un numero para matriz[r1][c1]:");
            scanf("%d",&m1[cr][cc]);
            printf("m1[%d][%d]\n",cr,cc);
            cc=cc+1;
        }
        cr=cr+1;
    }
	return 0;
}

El programa ejecutó al modificar el valor maximo de la matriz por 100 x 100
y posteriormente solo llenaba  un renglon de la matriz*/





*/#include <stdio.h>
int main() {
	int m1 [100][100];
    int r1;
    printf("Ingresar el numero de renglones de la matriz 1:");
    scanf("%d" ,&r1);
    int c1;
    printf("Ingresar el numero de columnas de la matriz 1:");
    scanf("%d" ,&c1);
    int cr;
    int cc;
    cr=0;
    
    while (cr<r1){
	cc=0;
        while (cc<c1){
            printf("Digite un numero para matriz[r1][c1]:");
            scanf("%d",&m1[cr][cc]);
            printf("m1[%d][%d]\n",cr,cc);
            cc=cc+1;
        }
		;
        cr=cr+1;
    }
	return 0;
}

Se reacomodaron las asignaciones porque lograba llenar algunos 
renglones y algunas columnas, pero no lo hacia en orden y ademas
el programa no */




/*#include <stdio.h>
int main() {
	int m1 [100][100];
    int r1;
    printf("Ingresar el numero de renglones de la matriz 1:");
    scanf("%d" ,&r1);
    int c1;
    printf("Ingresar el numero de columnas de la matriz 1:");
    scanf("%d" ,&c1);
    int cr;
    int cc;
    cr=0;
    
    while (cr<r1){
	cc=0;
        while (cc<c1){
            printf("Digite un numero para matriz[r1][c1]:");
            scanf("%d",&m1[cr][cc]);
            printf("m1[%d][%d]\n",cr,cc);
            cc=cc+1;
        }
        cr=cr+1;
    }
    cr=0;
    while(cr<r1){
    	cc=0;
		while(cc<c1){
    		printf("%d",m1[cr][cc]);
			cc=cc+1;
    	}
    	cr=cr+1;
    }
	return 0;
}
EL programa se ejcuró y funcionó de la maner que se tenía planeado,
lleno las matrices por renglones*/





/*#include <stdio.h>
int main() {
	int m1 [100][100];
    int r1;
    printf("Ingresar el numero de renglones de la matriz 1:");
    scanf("%d" ,&r1);
    int c1;
    printf("Ingresar el numero de columnas de la matriz 1:");
    scanf("%d" ,&c1);
    int cr;
    int cc;
    cr=0;
    
    while (cr<r1){
	cc=0;
        while (cc<c1){
            printf("Digite un numero para matriz[r1][c1]:");
            scanf("%d",&m1[cr][cc]);
            printf("m1[%d][%d]\n",cr,cc);
            cc=cc+1;
        }
        cr=cr+1;
    }
    cr=0;
    while(cr<r1){
              printf("\n");
    	cc=0;
		while(cc<c1){
    		printf("%d",m1[cr][cc]);
			cc=cc+1;
    	}
    	cr=cr+1;
    }
	return 0;
}
Se cambió una de las funciones del programa en un ciclo para que ademàs de asignar 
y pedir los números constituyentes los imprimiera en la forma de una matriz, sin sus respectivos
simbolos que la caracterizan*/





/*#include <stdio.h>

int main() {

	int m1 [100][100];

    	int r1;
    	printf("Ingresar el numero de renglones de la matriz 1:");
   	 scanf("%d" ,&r1);

   	 int c1;
    	printf("Ingresar el numero de columnas de la matriz 1:");
    	scanf("%d" ,&c1);

    	int cr;

   	int cc;
	
	cr=0;

    	while (cr<r1){

		cc=0;

        		while (cc<c1){

            		printf("Digite un numero para matriz[r1][c1]:");

            		scanf("%d",&m1[cr][cc]);

            		printf("m1[%d][%d]\n",cr,cc);

            	cc=cc+1;
	        }
	
	cr=cr+1;

    	}

    	cr=0;
    	printf("\n\n\t\t Matriz 1");
    	printf("\n");
   	while(cr<r1){
		printf("\n\t\t");
    		cc=0;
		while(cc<c1){
			printf("%d",m1[cr][cc]);
            		printf("\t");
			cc=cc+1;
    		}	

    	cr=cr+1;

    	}	

	return 0;
}
Se añadió otro comando ("\t") para que al momento de imprimir la matriz, este haga su 
función de tabulador horizontal junto con el salto de línea ("\n")*/
